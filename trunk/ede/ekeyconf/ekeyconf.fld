# data file for the eFLTK User Interface Designer (eFLUID)
version 2,0003 
images_dir ./ 
i18n 
header_name {.h} 
code_name {.cpp} 
gridx 5 
gridy 5 
snap 3
decl {// EControl applet for keyboard shortcuts} {} 

decl {// Copyright (c) 2005. EDE Authors} {} 

decl {// This program is licenced under terms of the} {} 

decl {// GNU General Public Licence version 2 or newer.} {} 

decl {// See COPYING for details} {} 

decl {//} {} 

decl {\#include <efltk/Fl_Locale.h>} {} 

decl {\#include <edeconf.h>} {} 

decl {\#include "Shortcut_Button.h"} {public
} 

decl {\#include "ekeys.h"} {} 

Function {} {open
} {
  code {fl_init_locale_support("ekeyconf", PREFIX"/share/locale");
readKeysConfiguration();} {}
  Fl_Window iconsConfWindow {
    label {Keyboard settings} open
    xywh {513 200 275 269} resizable visible
  } {
    Fl_Button {} {
      label {&OK}
      callback {writeKeysConfiguration();
sendUpdateInfo();
exit(0);}
      xywh {20 240 80 25}
    }
    Fl_Button {} {
      label {&Cancel}
      callback {exit(0);}
      xywh {190 240 80 24}
    }
    Fl_Button {} {
      label {&Apply}
      callback {writeKeysConfiguration();
sendUpdateInfo();}
      xywh {105 240 80 24}
    }
    Fl_Tabs {} {open
      xywh {3 5 265 229} color 0xfffffffe
    } {
      Fl_Group {} {
        label Shortcuts open
        xywh {1 28 263 200} align FL_ALIGN_TOP|FL_ALIGN_LEFT
      } {
        Fl_Button shortcut {
          label {Keyboard shortcut:}
          callback {setshortcutfor(action->value(),shortcut->svalue);}
          tooltip {To set a shortcut:
   Click here, then type the key combination you want.
To delete the shortcut:
   Click here, then type backspace.
To get out of shortcut-setting mode:
   Click the mouse on this again, or on some other field.}
          xywh {21 86 140 20} align FL_ALIGN_TOP|FL_ALIGN_LEFT box DOWN_BOX color 7
          class Shortcut_Button
        }
        Fl_Input_Browser action {
          label {Action:}
          callback {shortcut->svalue = getshortcutfor(action->value());
shortcut->redraw();} open
          xywh {21 35 165 21} align FL_ALIGN_TOP|FL_ALIGN_LEFT button_box {}
          extra_code {action->value("Next window");}
        } {}
        Fl_Button {} {
          label {&New shortcut...}
          callback {newShortcutWindow->show();}
          xywh {21 132 110 25}
        }
        Fl_Button {} {
          label {&Remove shortcut}
          callback {removeShortcut(action->value());
populatelist(action);
action->value(action->child(0)->label());
action->do_callback();} selected
          xywh {141 132 110 25}
        }
      }
    }
  }
  Fl_Window newShortcutWindow {
    label {Define new shortcut} open
    xywh {601 395 285 114} hide resizable modal
  } {
    Fl_Input shortcutName {
      label {&Shortcut name:}
      xywh {104 15 170 24}
    }
    Fl_Input shortcutCommand {
      label {C&ommand}
      xywh {104 49 170 24}
    }
    Fl_Button {} {
      label {&Ok}
      callback {addShortcut(shortcutName->value(),shortcutCommand->value());
populatelist(action);
action->value(shortcutName->value());
action->do_callback();
newShortcutWindow->hide();}
      xywh {49 83 88 24}
    }
    Fl_Button {} {
      label {&Cancel}
      callback {newShortcutWindow->hide();}
      xywh {158 83 88 24}
    }
  }
  code {populatelist(action);
shortcut->svalue = getshortcutfor("Next window");
shortcut->redraw();

// Grab all keyboard events from window manager
XGrabKey(fl_display, AnyKey, AnyModifier, fl_xid(w), true, GrabModeAsync, GrabModeAsync);} {}
} 
