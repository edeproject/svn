// generated by Fast Light User Interface Designer (fluid) version 2.0100

#ifndef edisplayconf_h
#define edisplayconf_h
#include <fltk/Window.h>
#include <fltk/TabGroup.h>
#include <fltk/Group.h>
#include <fltk/ValueSlider.h>
#include <fltk/Button.h>
#include <fltk/CheckButton.h>
#include <fltk/InvisibleBox.h>
#include <fltk/RadioButton.h>
#include <fltk/ReturnButton.h>

class edisplayconf  {
public:
  bool _finish;
  edisplayconf();
private:
  fltk::Window *win;
  inline void cb_win_i(fltk::Window*, void*);
  static void cb_win(fltk::Window*, void*);
      fltk::Group *group_mouse;
public:
        fltk::ValueSlider *slider_accel;
        fltk::ValueSlider *slider_thresh;
private:
      fltk::Group *group_bell;
public:
        fltk::ValueSlider *slider_volume;
        fltk::ValueSlider *slider_pitch;
        fltk::ValueSlider *slider_duration;
private:
        inline void cb_Test_i(fltk::Button*, void*);
        static void cb_Test(fltk::Button*, void*);
      fltk::Group *group_keyboard;
public:
        fltk::CheckButton *check_autorepeat;
        fltk::ValueSlider *slider_click;
      fltk::Group *group_screen;
        fltk::Button *but_activate;
private:
        inline void cb_but_activate_i(fltk::Button*, void*);
        static void cb_but_activate(fltk::Button*, void*);
public:
        fltk::ValueSlider *slider_delay;
        fltk::CheckButton *check_blanking;
        fltk::ValueSlider *slider_pattern;
          fltk::RadioButton *radio_blank;
private:
          inline void cb_radio_blank_i(fltk::RadioButton*, void*);
          static void cb_radio_blank(fltk::RadioButton*, void*);
public:
          fltk::RadioButton *radio_pattern;
private:
          inline void cb_radio_pattern_i(fltk::RadioButton*, void*);
          static void cb_radio_pattern(fltk::RadioButton*, void*);
    inline void cb_Cancel_i(fltk::Button*, void*);
    static void cb_Cancel(fltk::Button*, void*);
public:
    fltk::Button *but_kbd_apply;
private:
    inline void cb_but_kbd_apply_i(fltk::Button*, void*);
    static void cb_but_kbd_apply(fltk::Button*, void*);
    inline void cb_OK_i(fltk::ReturnButton*, void*);
    static void cb_OK(fltk::ReturnButton*, void*);
public:
  ~edisplayconf();
  void Run();
  void make_window();
  void radioCB();
};
int main(int ac,char **av);
extern edisplayconf *app;
#endif
